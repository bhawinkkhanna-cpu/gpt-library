"use client";

import { useEffect, useState } from "react";
import { supabase } from "@/lib/supabase";

type Message = { role: string; content: string };
type AgentConversation = { agent: string; messages: Message[] };

export default function Dashboard() {
  const [user, setUser] = useState<any>(null);
  const [recent, setRecent] = useState<AgentConversation[]>([]);

  useEffect(() => {
    const fetchData = async () => {
      const { data: userData } = await supabase.auth.getUser();
      if (userData.user) {
        setUser(userData.user);

        // fetch recent conversations grouped by agent
        const { data } = await supabase
          .from("conversations")
          .select("agent, role, content, created_at")
          .eq("user_id", userData.user.id)
          .order("created_at", { ascending: false })
          .limit(20);

        if (data) {
          // group by agent
          const grouped: { [key: string]: Message[] } = {};
          data.forEach((row) => {
            if (!grouped[row.agent]) grouped[row.agent] = [];
            grouped[row.agent].push({ role: row.role, content: row.content });
          });

          const convos: AgentConversation[] = Object.keys(grouped).map(
            (agent) => ({
              agent,
              messages: grouped[agent].slice(0, 3), // last 3 msgs
            })
          );

          setRecent(convos);
        }
      }
    };

    fetchData();
  }, []);

  const displayName =
    user?.user_metadata?.full_name || user?.email?.split("@")[0];

  const agentNames: Record<string, string> = {
    travel: "✈️ Travel Deals Assistant",
    fitness: "💪 Fitness Coach",
    finance: "💰 Money & Budget Advisor",
    therapy: "🧠 Therapy Companion",
  };

  const agentColors: Record<string, string> = {
    travel: "from-red-100 to-red-50 border-red-300",
    fitness: "from-blue-100 to-blue-50 border-blue-300",
    finance: "from-green-100 to-green-50 border-green-300",
    therapy: "from-purple-100 to-purple-50 border-purple-300",
  };

  return (
    <div className="min-h-screen bg-gray-50 flex flex-col">
      {/* Header */}
      <header className="w-full flex justify-between items-center px-6 py-3 bg-gray-100 shadow-sm">
        <h1 className="text-lg font-semibold">GPT Library</h1>
        {user ? (
          <div className="relative group">
            <button className="flex items-center gap-2 px-3 py-2 bg-white rounded-lg shadow hover:bg-gray-50">
              <img
                src={
                  user.user_metadata?.avatar_url ||
                  "https://via.placeholder.com/32"
                }
                alt="avatar"
                className="w-8 h-8 rounded-full"
              />
              <span>{displayName}</span>
            </button>
            <div className="absolute right-0 mt-2 bg-white shadow rounded-lg hidden group-hover:block">
              <button
                onClick={async () => {
                  await supabase.auth.signOut();
                  window.location.href = "/login";
                }}
                className="block w-full text-left px-4 py-2 text-gray-700 hover:bg-gray-100"
              >
                Logout
              </button>
            </div>
          </div>
        ) : (
          <a
            href="/login"
            className="px-4 py-2 bg-blue-500 text-white rounded-lg"
          >
            Login
          </a>
        )}
      </header>

      {/* Main */}
      <main className="flex-1 flex flex-col items-center px-6 py-10">
        {user ? (
          <h2 className="text-2xl font-bold text-gray-800 mb-4">
            👋 Welcome back, {displayName}!
          </h2>
        ) : (
          <h2 className="text-xl font-semibold text-gray-700 mb-4">
            Please log in to personalize your experience.
          </h2>
        )}

        <p className="text-gray-600 mb-8 max-w-lg text-center">
          Explore your personal library of GPT-powered assistants. Each one is
          here to make your life easier — from planning travel to budgeting
          money, staying fit, or finding peace of mind.
        </p>

        {/* Agent grid */}
        <div className="grid grid-cols-2 gap-6 mb-10">
          <a
            href="/travel"
            className="p-6 bg-white rounded-full shadow hover:scale-105 transition"
          >
            ✈️
          </a>
          <a
            href="/fitness"
            className="p-6 bg-white rounded-full shadow hover:scale-105 transition"
          >
            💪
          </a>
          <a
            href="/finance"
            className="p-6 bg-white rounded-full shadow hover:scale-105 transition"
          >
            💰
          </a>
          <a
            href="/therapy"
            className="p-6 bg-white rounded-full shadow hover:scale-105 transition"
          >
            🧠
          </a>
        </div>

        {/* Recent Conversations */}
        {user && recent.length > 0 && (
          <div className="w-full max-w-2xl">
            <h3 className="text-lg font-semibold mb-4 text-gray-800">
              🕒 Recent Conversations
            </h3>
            <div className="space-y-4">
              {recent.map((c) => (
                <a
                  key={c.agent}
                  href={`/${c.agent}`}
                  className={`block p-4 rounded-lg shadow border bg-gradient-to-r ${
                    agentColors[c.agent] || "from-gray-50 to-gray-100"
                  }`}
                >
                  <div className="font-semibold mb-2">
                    {agentNames[c.agent] || c.agent}
                  </div>
                  <ul className="text-sm text-gray-700 space-y-1">
                    {c.messages.map((m, i) => (
                      <li key={i} className="truncate">
                        <span className="font-medium">
                          {m.role === "user" ? "You: " : "AI: "}
                        </span>
                        {m.content}
                      </li>
                    ))}
                  </ul>
                </a>
              ))}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
